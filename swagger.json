{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "FileQC API",
    "description": "API for the FileQC project"
  },
  "servers": [{
    "url": "/",
    "variables": {
      "protocol": {
        "enum": [
          "http",
          "https"
        ],
        "default": "https"
      }
    }
  }],
  "paths": {
    "/add-fileqcs": {
      "post": {
        "summary": "Batch create FileQC records",
        "description": "Adds FileQC records for the given items",
        "requestBody": {
          "description": "Array of FileQCs",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "fileqcs": {
                    "$ref": "#/components/schemas/FileQC-add"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully created FileQCs"
          },
          "400": {
            "description": "Failures during save caused no FileQCs to be created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        }
      }
    },
    "/available": {
      "get": {
        "summary": "Get available projects and workflows",
        "description": "Lists all projects and workflow names in File Provenance Report",
        "responses": {
          "200": {
            "description": "Lists of projects and workflow names in File Provenance Report",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "projects": {
                      "description": "List of distinct projects in the File Provenance Report",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "workflows": {
                      "description": "List of distinct workflow names in the File Provenance Report",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                   }
                 }
               }
             }
           }
         }
       }
     }
   },
   "/delete-fileqcs": {
      "post": {
        "summary": "Batch delete FileQC records",
        "description": "Deletes FileQC records for the given File IDs",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "fileids": {
                    "description": "List of file IDs for which the FileQCs should be deleted",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully deleted at least some FileQCs",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                    "type": "array",
                    "description": "Message containing the IDs of the FileQCs which were deleted",
                    "items": {
                      "type": "string"
                    }
                  },
                  "errors": {
                    "type": "array",
                    "description": "Message containing the IDs of the FileQCs which were not deleted",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
     }
          },
          "400": {
            "description": "Failed to delete any FileQCs",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        }
      }
    },
    "/fileqcs-only": {
      "get": {
        "summary": "Get a stream of all FileQCs",
        "description": "Returns an unordered stream of all FileQCs in the database",
        "responses": {
          "200": {
            "description": "A stream of all FileQCs",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FileQCs-only-response"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get-fileqcs": {
      "post": {
        "summary": "Get one or more FileQCs",
        "description": "Get FileQCs for the given filters",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "filters": {
                    "description": "File QC filters",
                    "type": "object",
                    "$ref": "#/components/schemas/FileQC-get"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A list of FileQCs",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileQCs-response"
                }
              }
            }
          },
          "404": {
            "description": "No files found for given filters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        }
      }
    },
    "/cases": {
      "get": {
        "summary": "Get all case archives",
        "description": "A streaming endpoint to get all case archive records",
        "parameters": {
          "in": "query",
          "name": "not",
          "required": false,
          "schema": {
            "type": "string"
          },
          "description": "Optional parameter to filter by outstanding case archiving work. Permitted values are: 'copied-to-staging', 'sent-offsite', 'sent-to-vidarr-archival', 'unloaded'"
        }
      },
      "responses": {
        "200": {
          "description": "All case archive records",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Case-response"
                }
              }
            }
          }
        }
      }
    },
    "/case": {
      "post": {
        "summary": "Create a case archive record",
        "description": "Adds a case archive record with basic data",
        "requestBody": {
          "description": "Fields for creating a new case archive record",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Case-new"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Case archive record exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Case-response"
                }
              }
            }
          },
          "201": {
            "description": "Case archive record created or updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Case-response"
                }
              }
            }
          },
          "409": {
            "description": "Submitted parameters do not match parameters for existing case with the same caseIdentifier",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        }
      }
    },
    "/case/{caseIdentifier}": {
      "get": {
        "summary": "Get a case archive record",
        "description": "This resource represents a case and archive record. Each case and archive record is identified by a string `caseIdentifier`",
        "parameters": [{
          "name": "caseIdentifier",
          "in": "path",
          "description": "unique case identifier",
          "required": true,
          "schema": {
            "type": "string"
          }
        }],
        "responses": {
          "201": {
            "description": "Created case archive record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Case-response"
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found"
          }
        }
      }
    },
    "/case/{caseIdentifier}/files-copied-to-offsite-staging-dir": {
      "put": {
        "summary": "Case archive files moved to offsite staging directory",
        "description": "Indicate that this case archive's files have been moved to the offfsite staging directory",
        "parameters": [
          {
            "name": "caseIdentifier",
            "in": "path",
            "description": "unique case identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ], 
        "requestBody": {
          "required": true,
          "description": "Vidarr unload file containing metadata about the files to be moved to the offsite staging directory",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Case archive record was updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Case-response"
                }
              }
            }
          },
          "404": {
            "description": "The requested case archive resource was not found"
          }

        }
      }
    },
    "/case/{caseIdentifier}/files-sent-offsite": {
      "put": {
        "summary": "Case archive files were sent offsite",
        "description": "Indicate that this case archive's files have been archived offsite",
        "parameters": [
          {
            "name": "caseIdentifier",
            "in": "path",
            "description": "unique case identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "ID of Commvault backup job for sending the files offsite",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "commvaultBackupJobId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Case archive record was updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Case-response"
                }
              }
            }
          },
          "404": {
            "description": "The requested case archive resource was not found"
          }
        }
      }
    },
    "/case/{caseIdentifier}/files-loaded-into-vidarr-archival": {
      "put": {
        "summary": "Case archive files loaded into vidarr-archival",
        "description": "Indicate that this case archive's files have been loaded into vidarr-archival",
        "parameters": [
          {
            "name": "caseIdentifier",
            "in": "path",
            "description": "unique case identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Vidarr unload file containing metadata about the files to be loaded into vidarr-archival",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Case archive record was updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Case-response"
                }
              }
            }
          },
          "404": {
            "description": "The requested case archive resource was not found"
          }
        }
      }
    },
    "/case/{caseIdentifier}/case-files-unloaded": {
      "put": {
        "summary": "Case archive files deleted from production vidarr",
        "description": "Record that this case archive's files have been deleted from production vidarr",
        "parameters": [
          {
            "name": "caseIdentifier",
            "in": "path",
            "description": "unique case identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Case archive record was updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Case-response"
                }
              }
            }
          },
          "404": {
            "description": "The requested case archive resource was not found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
    "Errors": {
      "type": "object",
      "properties": {
        "errors": {
          "description": "List of errors",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "FileQC-get": {
      "type": "object",
      "properties": {
        "fileids": {
          "description": "Filter by File IDs",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "fileswids": {
          "description": "Filter by file SWIDs (deprecated)",
          "type": "string"
        },
        "project": {
          "description": "Filter by Project short name",
          "type": "string"
        },
        "qcstatus": {
          "description": "Filter by qc status (PASS, FAIL, PENDING)",
          "type": "string"
        },
        "workflow": {
          "description": "Filter by workflow name. Must be used with `project` query",
          "type": "string"
        }
      }
    },
    "FileQC-response": {
      "type": "object",
      "properties": {
        "alert": {
          "description": "Lists known issues for FileQCs",
          "type": "string"
        },
        "comment": {
          "description": "URL-escaped reason why FileQC is PASS or FAIL (only returned if a FileQC record is found and a comment was provided)",
          "type": "string"
        },
        "fileid": {
          "description": "File ID",
          "type": "string"
        },
        "filepath": {
          "description": "File Path",
          "type": "string"
        },
        "fileqcid": {
          "description": "Unique FileQC ID",
          "type": "integer"
        },
        "fileswid": {
          "description": "File SWID",
          "type": "integer"
        },
        "md5sum": {
          "description": "File md5sum",
          "type": "string"
        },
        "project": {
          "description": "Project",
          "type": "string"
        },
        "qcdate": {
          "description": "QC Date (only returned if a FileQC record is found)",
          "type": "string"
        },
        "qcstatus": {
          "description": "FileQC status (PASS, FAIL, PENDING)",
          "type": "string"
        },
        "skip": {
          "description": "Whether file is skipped in analysis (only returned if a File Provenance Reprot record is found)",
          "type": "boolean"
        },
        "stalestatus": {
          "description": "Whether file has been superseded by a more recent analysis (OKAY, STALE, NOT IN PROVENANCE)",
          "type": "string"
        },
        "upstream": {
          "description": "List of input File IDs (only returned if a File Provenance Report record is found)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "username": {
          "description": "Name of person QCing the file (only returned if a FileQC record is found)",
          "type": "string"
        },
        "workflow": {
          "description": "Workflow",
          "type": "string"
        }
      }
    },
    "FileQCs-response": {
      "type": "object",
      "properties": {
        "fileqcs": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/FileQC-response"
          }
        }
      }
    },
    "FileQCs-only-response": {
      "type": "object",
      "properties": {
        "comment": {
          "description": "Further information about the QC status",
          "type": "string"
        },
        "fileid": {
          "description": "File ID",
          "type": "string"
        },
        "filepath": {
          "description": "File Path",
          "type": "string"
        },
        "fileqcid": {
          "description": "Unique FileQC ID",
          "type": "integer"
        },
        "fileswid": {
          "description": "File SWID",
          "type": "integer"
        },
        "project": {
          "description": "Project name",
          "type": "string"
        },
        "qcdate": {
          "description": "QC Date",
          "type": "string"
        },
        "qcpassed": {
          "description": "Is FileQC PASS?",
          "type": "boolean"
        },
        "workflow": {
          "description": "Workflow name",
          "type": "string"
        },
        "username": {
          "description": "Name of person QCing the file",
          "type": "string"
        }
      }
    },
    "FileQC-add": {
      "type": "object",
      "properties": {
        "fileqcs": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "comment": {
                "description": "optional URL-escaped reason why FileQC is PASS or FAIL",
                "type": "string"
              },
             "fileid": {
                "description": "File ID",
                "type": "string"
              },
              "qcstatus": {
                "description": "PASS or FAIL or PENDING",
                "type": "string"
              },
              "username": {
                "description": "Name of person QCing the file",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "Case-new": {
      "type": "object",
      "properties": {
        "caseIdentifier": {
          "description": "Unique case identifier",
          "type": "string"
        },
        "requisitionId": {
          "description": "Requisition number",
          "type": "integer"
        },
        "limsIds": {
          "description": "LIMS IDs associated with the case",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "workflowRunIdsForOffsiteArchive": {
          "description": "Vidarr workflow run IDs whose files need to be archived offsite",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "workflowRunIdsForVidarrArchival": {
          "description": "Vidarr workflow run IDs whose files need to be stored in vidarr-archival",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Case-response": {
      "type": "object",
      "properties": {
        "created": {
          "description": "Date that the case was created in Nabu",
          "type": "string",
          "format": "date-time"
        },
        "modified": {
          "description": "Date that the case was last modified in Nabu",
          "type": "string",
          "format": "date-time"
        },
        "caseIdentifier": {
          "description": "Unique case identifier",
          "type": "string"
        },
        "requisitionId": {
          "description": "Requisition number",
          "type": "integer"
        },
        "limsIds": {
          "description": "LIMS IDs associated with the case",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "workflowRunIdsForOffsiteArchive": {
          "description": "Vidarr workflow run IDs whose files need to be archived offsite",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "filesCopiedToOffsiteArchiveStagingDir": {
          "description": "Date that the case was copied to the offsite archive staging directory",
          "type": "string",
          "format": "date-time"
        },
        "commvaultBackupJobId": {
          "description": "Commvault identifier for the backup job for sending the case to offsite location",
          "type": "string"
        },
        "workflowRunIdsForVidarrArchival": {
          "description": "Vidarr workflow run IDs whose files need to be stored in vidarr-archival",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "filesLoadedIntoVidarrArchival": {
          "description": "Date that the case was last modified in Nabu",
          "type": "string",
          "format": "date-time"
        },
        "caseFilesUnloaded": {
          "description": "Date that the case was last modified in Nabu",
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "created",
        "modified",
        "caseIdentifier",
        "requisitionId",
        "limsIds",
        "workflowRunIdsForOffsiteArchive",
        "filesCopiedToOffsiteArchiveStagingDir",
        "commvaultBackupJobId",
        "workflowRunIdsForVidarrArchival",
        "filesLoadedIntoVidarrArchival",
        "caseFilesUnloaded"
      ]
    }
  }
  }
}
