{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "FileQC API",
    "description": "API for the FileQC project"
  },
  "schemes": [
    "http",
    "https"
  ],
  "basePath": "/",
  "paths": {
    "/available": {
      "get": {
        "summary": "Get available projects and workflows",
        "description": "Lists all projects and workflow names in File Provenance Report",
        "responses": {
          "200": {
            "description": "Lists of projects and workflow names in File Provenance Report",
            "schema": {
              "type": "object",
              "properties": {
                "projects": {
                  "description": "List of distinct projects in the File Provenance Report",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "workflows": {
                  "description": "List of distinct workflow names in the File Provenance Report",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get-fileqcs": {
      "post": {
        "summary": "Get one or more FileQCs",
        "description": "Get FileQCs for the given filters",
        "parameters": [
          {
            "name": "filters",
            "description": "File QC filters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FileQC-get"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of FileQCs",
            "schema": {
              "$ref": "#/definitions/FileQCs-response"
            }
          },
          "404": {
            "description": "No files found for given filters",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        }
      }
    },
    "/fileqcs-only": {
      "get": {
        "summary": "Get a stream of all FileQCs",
        "description": "Returns an unordered stream of all FileQCs in the database",
        "responses": {
          "200": {
            "description": "A stream of all FileQCs",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FileQCs-only-response"
              }
            }
          }
        }
      }
    },
    "/add-fileqcs": {
      "post": {
        "summary": "Batch create FileQC records",
        "description": "Adds FileQC records for the given items",
        "parameters": [
          {
            "in": "body",
            "name": "fileqcs",
            "description": "Array of FileQCs",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FileQC-add"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created FileQCs"
          },
          "400": {
            "description": "Failures during save caused no FileQCs to be created",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        }
      }
    },
    "/delete-fileqcs": {
      "post": {
        "summary": "Batch delete FileQC records",
        "description": "Deletes FileQC records for the given File IDs",
        "parameters": [
          {
            "in": "body",
            "name": "fileids",
            "schema": {
              "description": "List of file IDs for which the FileQCs should be deleted",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted at least some FileQCs",
            "type": "object",
            "properties": {
              "success": {
                "type": "array",
                "description": "Message containing the IDs of the FileQCs which were deleted",
                "items": {
                  "type": "string"
                }
              },
              "errors": {
                "type": "array",
                "description": "Message containing the IDs of the FileQCs which were not deleted",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Failed to delete any FileQCs",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Errors": {
      "type": "object",
      "properties": {
        "errors": {
          "description": "List of errors",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "FileQC-get": {
      "type": "object",
      "properties": {
        "fileids": {
          "description": "Filter by File IDs",
          "in": "body",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "project": {
          "description": "Filter by Project short name",
          "in": "body",
          "type": "string"
        },
        "workflow": {
          "description": "Filter by workflow name. Must be used with `project` query",
          "in": "body",
          "type": "string"
        },
        "qcstatus": {
          "description": "Filter by qc status (PASS, FAIL, PENDING)",
          "in": "body",
          "type": "string"
        },
        "fileswids": {
          "description": "Filter by file SWIDs (deprecated)",
          "in": "body",
          "type": "string"
        }
      }
    },
    "FileQC-response": {
      "type": "object",
      "properties": {
        "fileqcid": {
          "description": "Unique FileQC ID",
          "type": "integer"
        },
        "fileid": {
          "description": "File ID",
          "type": "string"
        },
        "fileswid": {
          "description": "File SWID",
          "type": "integer"
        },
        "filepath": {
          "description": "File Path",
          "type": "string"
        },
        "md5sum": {
          "description": "File md5sum",
          "type": "string"
        },
        "workflow": {
          "description": "Workflow",
          "type": "string"
        },
        "qcstatus": {
          "description": "FileQC status (PASS, FAIL, PENDING)",
          "type": "string"
        },
        "username": {
          "description": "Name of person QCing the file (only returned if a FileQC record is found)",
          "type": "string"
        },
        "comment": {
          "description": "URL-escaped reason why FileQC is PASS or FAIL (only returned if a FileQC record is found and a comment was provided)",
          "type": "string"
        },
        "project": {
          "description": "Project",
          "type": "string"
        },
        "qcdate": {
          "description": "QC Date (only returned if a FileQC record is found)",
          "type": "string"
        },
        "upstream": {
          "description": "List of input File IDs (only returned if a File Provenance Report record is found)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "skip": {
          "description": "Whether file is skipped in analysis (only returned if a File Provenance Reprot record is found)",
          "type": "boolean"
        },
        "stalestatus": {
          "description": "Whether file has been superseded by a more recent analysis (OKAY, STALE, NOT IN PROVENANCE)",
          "type": "string"
        },
        "alert": {
          "description": "Lists known issues for FileQCs",
          "type": "string"
        }
      }
    },
    "FileQCs-response": {
      "type": "object",
      "properties": {
        "fileqcs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FileQC-response"
          }
        }
      }
    },
    "FileQCs-only-response": {
      "type": "object",
      "properties": {
        "alert": {
          "description": "Description of known FileQC issues",
          "type": "string"
        },
        "fileqcid": {
          "description": "Unique FileQC ID",
          "type": "integer"
        },
        "fileid": {
          "description": "File ID",
          "type": "string"
        },
        "fileswid": {
          "description": "File SWID",
          "type": "integer"
        },
        "filepath": {
          "description": "File Path",
          "type": "string"
        },
        "qcpassed": {
          "description": "Is FileQC PASS?",
          "type": "boolean"
        },
        "username": {
          "description": "Name of person QCing the file",
          "type": "string"
        },
        "comment": {
          "description": "Further information about the QC status",
          "type": "string"
        },
        "project": {
          "description": "Project name",
          "type": "string"
        },
        "workflow": {
          "description": "Workflow name",
          "type": "string"
        },
        "qcdate": {
          "description": "QC Date",
          "type": "string"
        }
      }
    },
    "FileQC-add": {
      "type": "object",
      "properties": {
        "fileqcs": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "fileid": {
                "description": "File ID",
                "type": "string"
              },
              "qcstatus": {
                "description": "PASS or FAIL or PENDING",
                "type": "string"
              },
              "username": {
                "description": "Name of person QCing the file",
                "type": "string"
              },
              "comment": {
                "description": "optional URL-escaped reason why FileQC is PASS or FAIL",
                "type": "string"
              }
            }
          }
        }
      }
    }
  }
}
